Entities: User, Avatar, Module, Lesson, LessonDependencies, Exercise, ExerciseChoices

Columns common to all entities (except LessonDependencies and ExerciseChoices):
- id: primary key/auto-incremented; INT datatype column.
- created_at: DATE datatype column.
- updated_at: DATE datatype column.

User: the end-user data
- nickname: unique key of VARCHAR datatype. It's the user fantasy-name that uniquely identifies at the interface (rankings etc).
- selected_avatar: foreign key that references 'id' from Avatar. It stores the selected avatar (the one to be used) by the user. 
- email: unique key; VARCHAR datatype column.
- password: TEXT datatype column. It stores a password hash.
- checkpoint: foreign key that references 'id' from Lesson. It stores the 'id' of the last lesson made by the user. Its default value is 1.
- energetic_amount: INT datatype column. The amount of energetics the user has (one energetic is consumed after each fail at an exercise). Its default value is 3.
- rubies_amount: INT datatype column. The amount of rubies the user has (they're used to buy energetics, avatars etc). Its default value is 0.

Avatar: avatars available to be selected by users; 
- name: unique key; VARCHAR datatype column. it stores the name of the avatar to be shown to the end-user.
('id' serve para queries "debaixo dos panos", mas não cairia bem mostrar ao usuário final que ele pode obter o avatar 2621).
- filename: unique key; TEXT datatype column. It'll be used for creating a url at the back-end to be sent and used at the front-end ('src' in <img>).

Module
- name: VARCHAR datatype column. It stores the name of the module to be shown to the end-user.
- description: TEXT datatype column. It stores the description about the content of the module.

Lesson
- module_id: foreign key that references 'id' from Module. It stores the 'id' of the module the lesson belongs to.
- name: VARCHAR datatype column. It stores the name of the lesson to be shown to the end-user.
- programming_language: VARCHAR datatype column. It stores the name of the programming language used in the lesson.

LessonDependencies
- lesson_id: foreign key that references 'id' from Lesson. It stores the 'id' of the lesson to be associated with others (dependencies).
- next_lesson_id: foreign key that references 'id' from Lesson. It stores the 'id' of a lesson available immediately after 'lesson_id'.
- previous_lesson_id: foreign key that references 'id' from Lesson. It stores the 'id' a the lesson available immediately before 'lesson_id'.

Exercise
- lesson_id: foreign key that references 'id' from Lesson. It stores the 'id' of the lesson the exercise belongs to.
- question: TEXT datatype column. It stores the question to be answered.

ExerciseChoices
- exercise_id: foreign key that references 'id' from Exercise. It stores the 'id' of the exercise the choice belong to.
- choice_id: unique key;  INT datatype column. It stores the 'id' of the choice available to be selected by the user.
- choice_text: TEXT datatype column. It stores the text of the choice to be shown to the end-user.
- is_correct: BOOLEAN datatype column. It stores if the choice is correct or not. Its default value is false.

Relationships:

User and Avatar:
- Many-to-Many/(0:N): one user can have only one or more avatars (FK avatar_id in UserAvatars), and one avatar can be selected by many users (FK user_id in UserAvatars).
- One-to-One/(1:1): one user have only one selected avatar (FK selected_avatar in User).

User and Lesson:
- One-to-Many/(0:N): one user can have made one lesson (FK checkpoint in User), and one lesson can have been made by many users (FK checkpoint in User).

Lesson and Module:
- One-to-Many/(1:N): one module can have one or more lessons (FK module_id in Lesson), and one lesson belongs to only one module (FK module_id in Lesson).

Lesson and LessonDependencies:
- One-to-One/(1:N): one lesson can have one or more dependencies (FK lesson_id in LessonDependencies)
- One-to-Many/(N:N): one lesson can be a dependency of many lessons (FK next_lesson_id and previous_lesson_id in LessonDependencies).

Lesson and Exercise:
- One-to-Many/(1:N): one lesson can have one or more exercises (FK lesson_id in Exercise)
- One-to-One/(1:1): one exercise belongs to only one lesson (FK lesson_id in Exercise).

Exercise and ExerciseChoices:
- One-to-Many/(1:N): one exercise can have one or more choices (FK exercise_id in ExerciseChoices)
- One-to-One/(1:1): one choice belongs to only one exercise (FK exercise_id in ExerciseChoices).